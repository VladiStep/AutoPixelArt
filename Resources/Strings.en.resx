<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="debugMode" xml:space="preserve">
    <value>debug mode</value>
  </data>
  <data name="minutesRemaining" xml:space="preserve">
    <value>Minutes remaining - </value>
  </data>
  <data name="someSettingsDamaged" xml:space="preserve">
    <value>Some settings had invalid values, so they were reset to default values.</value>
  </data>
  <data name="paletteVer0" xml:space="preserve">
    <value> version</value>
  </data>
  <data name="paletteVer1" xml:space="preserve">
    <value>Palette</value>
  </data>
  <data name="currentLayer" xml:space="preserve">
    <value>Current layer - </value>
  </data>
  <data name="start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="doneBuilding" xml:space="preserve">
    <value>Done. Minutes passed: </value>
  </data>
  <data name="lessThanOne" xml:space="preserve">
    <value>less than one</value>
  </data>
  <data name="imgDamaged" xml:space="preserve">
    <value>Selected file is damaged, or is not an image.</value>
  </data>
  <data name="width" xml:space="preserve">
    <value>Width - </value>
  </data>
  <data name="height" xml:space="preserve">
    <value>Height - </value>
  </data>
  <data name="colorCount" xml:space="preserve">
    <value>Colors count - </value>
  </data>
  <data name="takeMinutes" xml:space="preserve">
    <value>Would take minutes - </value>
  </data>
  <data name="chooseVer" xml:space="preserve">
    <value>Choose version...</value>
  </data>
  <data name="noPalette" xml:space="preserve">
    <value>There's no palette for older versions. You'll have to pick the blocks yourself.</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="startSuccess" xml:space="preserve">
    <value>Successfully started.</value>
  </data>
  <data name="toCancelBlock" xml:space="preserve">
    <value>To unblock, press Ctrl + Alt + Delete.</value>
  </data>
  <data name="pic" xml:space="preserve">
    <value>Picture</value>
  </data>
  <data name="allFiles" xml:space="preserve">
    <value>All files</value>
  </data>
  <data name="openPic" xml:space="preserve">
    <value>Open picture...</value>
  </data>
  <data name="ver" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="author" xml:space="preserve">
    <value>Author - Vladislav Stepanov.</value>
  </data>
  <data name="settingsReset" xml:space="preserve">
    <value>Settings are reset.</value>
  </data>
  <data name="readCarefully" xml:space="preserve">
    <value>Read carefully, please.</value>
  </data>
  <data name="invalidNum" xml:space="preserve">
    <value>The number is written incorrectly.</value>
  </data>
  <data name="validPicLayer" xml:space="preserve">
    <value>The number of layer for this picture - from 2 to </value>
  </data>
  <data name="hideEnabled" xml:space="preserve">
    <value>In the settings, hiding the Minecraft window is turned on.</value>
  </data>
  <data name="langChangeReset" xml:space="preserve">
    <value>Restart the program for the changes to take effect.</value>
  </data>
  <data name="colorsReduced0" xml:space="preserve">
    <value>Number of colors was reduced to </value>
  </data>
  <data name="colorsReduced1" xml:space="preserve">
    <value>was - </value>
  </data>
  <data name="reduceError" xml:space="preserve">
    <value>Failed to reduce the number of colors due to an internal error in the ImageSharp library.</value>
  </data>
  <data name="hiddenFound" xml:space="preserve">
    <value>Found one hidden Minecraft window. Restore?</value>
  </data>
  <data name="hiddenFoundSev" xml:space="preserve">
    <value>Found several hidden Minecraft windows. Restore?</value>
  </data>
  <data name="hiddenRestored" xml:space="preserve">
    <value>Window restored.</value>
  </data>
  <data name="hiddenRestoredSev" xml:space="preserve">
    <value>Windows restored.</value>
  </data>
  <data name="windowLost" xml:space="preserve">
    <value>Lost access to the working Minecraft window.</value>
  </data>
  <data name="unfinishedLayerNum0" xml:space="preserve">
    <value>Unfinished layer number - </value>
  </data>
  <data name="unfinishedLayerNum1" xml:space="preserve">
    <value>inscribed in "from the layer" continuation text box</value>
  </data>
  <data name="savePic" xml:space="preserve">
    <value>Save picture...</value>
  </data>
  <data name="saved" xml:space="preserve">
    <value>Saved.</value>
  </data>
  <data name="windowNotFound" xml:space="preserve">
    <value>Window not found.</value>
  </data>
  <data name="openedSevWindows0" xml:space="preserve">
    <value>Opened two or more Minecraft windows.</value>
  </data>
  <data name="openedSevWindows1" xml:space="preserve">
    <value>Non-minimized window will be considered the required window.</value>
  </data>
  <data name="openedSevWindows2" xml:space="preserve">
    <value>Minimize unnecessary windows so that only one non-minimized window remains, and click OK.</value>
  </data>
  <data name="stillSevWindows" xml:space="preserve">
    <value>Still see more that one visible Minecraft window.</value>
  </data>
  <data name="noWindow" xml:space="preserve">
    <value>Can't see any non-minimized Minecraft window.</value>
  </data>
  <data name="blockError0" xml:space="preserve">
    <value>Failed to block keyboard and mouse. Error - </value>
  </data>
  <data name="blockError1" xml:space="preserve">
    <value>Try to restart the program as administrator. If that doesn't help - report the error to the author of the program.</value>
  </data>
  <data name="blockError2" xml:space="preserve">
    <value>Continue without block?</value>
  </data>
  <data name="settingsSaved" xml:space="preserve">
    <value>Settings are saved.</value>
  </data>
  <data name="vanishWarning" xml:space="preserve">
    <value>If Minecraft window is hidden, you can return it back ONLY WITH THIS PROGRAM (or through the "Task Manager", by stopping Minecraft process "javaw.exe") !</value>
  </data>
  <data name="countdown" xml:space="preserve">
    <value>Countdown</value>
  </data>
</root>